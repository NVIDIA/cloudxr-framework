{"identifier":{"url":"doc:\/\/com.nvidia.CloudXRKit\/documentation\/CloudXRKit\/Your-First-AVP-CloudXR-Client","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"CloudXRKit"}],"title":"Your First CloudXR Client for visionOS","role":"article","roleHeading":"Article"},"variants":[{"paths":["\/documentation\/cloudxrkit\/your-first-avp-cloudxr-client"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/cloudxrkit\/your-first-avp-cloudxr-client"],"traits":[{"interfaceLanguage":"occ"}]}],"hierarchy":{"paths":[["doc:\/\/com.nvidia.CloudXRKit\/documentation\/CloudXRKit"]]},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"content","content":[{"anchor":"System-Requirements","type":"heading","level":2,"text":"System Requirements"},{"inlineContent":[{"type":"text","text":"As tested:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Xcode 16.3","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"visionOS Simulator 2.4"}]}]}]},{"anchor":"Make-your-project","type":"heading","level":2,"text":"Make your project"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Open"}]},{"type":"text","text":" Xcode and "},{"type":"strong","inlineContent":[{"text":"select","type":"text"}]},{"type":"text","text":" "},{"type":"codeVoice","code":"New Project"},{"type":"text","text":". Or if you have Xcode already open "},{"type":"strong","inlineContent":[{"type":"text","text":"go to"}]},{"type":"text","text":" "},{"type":"codeVoice","code":"File > New > Project"},{"type":"text","text":"."}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"image","identifier":"new-proj-xcode.png"}],"type":"paragraph"},{"inlineContent":[{"identifier":"new-proj.png","type":"image"}],"type":"paragraph"},{"type":"orderedList","start":2,"items":[{"content":[{"inlineContent":[{"text":"Now we will choose our template. From the top navigation, ","type":"text"},{"inlineContent":[{"type":"text","text":"select"}],"type":"strong"},{"text":" ","type":"text"},{"type":"codeVoice","code":"visionOS"},{"text":" then ","type":"text"},{"inlineContent":[{"text":"select","type":"text"}],"type":"strong"},{"text":" ","type":"text"},{"type":"codeVoice","code":"App"},{"text":". From there ","type":"text"},{"inlineContent":[{"type":"text","text":"click"}],"type":"strong"},{"text":" on ","type":"text"},{"type":"codeVoice","code":"Next"},{"text":".","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"image","identifier":"xcode-new-project.png"}],"type":"paragraph"},{"type":"orderedList","start":3,"items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Setup"}],"type":"strong"},{"text":" and ","type":"text"},{"inlineContent":[{"type":"text","text":"Configure"}],"type":"strong"},{"text":" the following options:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Product Name:"}],"type":"strong"},{"text":" My First AVP CloudXR Client","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Team:"}]},{"text":" Select your appropriate team from the drop down","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Organization Identifier:"}],"type":"strong"},{"text":" Provide an identifier corresponding to your organization \/ team","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Initial scene:","type":"text"}],"type":"strong"},{"text":" Window","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"For now, let’s assume you want your users to start in a “login window”."}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Immersive space renderer:","type":"text"}],"type":"strong"},{"type":"text","text":" None"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"We’ll set this up later with CloudXR.","type":"text"}]}]}]}]}],"type":"unorderedList"}]}]},{"inlineContent":[{"type":"image","identifier":"xcode-new-project-options.png"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Click"}],"type":"strong"},{"text":" on ","type":"text"},{"type":"codeVoice","code":"Next"},{"text":". It will then prompt you where you want to save your project. Once you have selected a destination ","type":"text"},{"inlineContent":[{"text":"click","type":"text"}],"type":"strong"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Create"},{"text":". You should now see a window similar to the one below.","type":"text"}],"type":"paragraph"}]}],"start":4,"type":"orderedList"},{"inlineContent":[{"type":"image","identifier":"created-proj.png"}],"type":"paragraph"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"NOTE:"}]},{"type":"text","text":" If the Preview Window is not working, do not worry about that it will not affect how the project runs in the simulator or on the device."}]}],"style":"note","name":"Note"},{"inlineContent":[{"text":"Make sure you know how to run apps on both the visionOS simulator and a Vision Pro device, as appropriate. If you are unsure see, ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/documentation\/xcode\/running-your-app-in-simulator-or-on-a-device","type":"reference","isActive":true}],"type":"paragraph"},{"start":5,"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Always and ever: Go ahead and "},{"type":"strong","inlineContent":[{"type":"text","text":"build"}]},{"type":"text","text":" your project as it is, make sure everything works. To build, "},{"type":"strong","inlineContent":[{"type":"text","text":"click"}]},{"type":"text","text":" on the Play Icon at the top left of the window."}]}]}]},{"inlineContent":[{"type":"image","identifier":"build-proj.png"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"After building you should see the following on either the simulator or the device."}],"type":"paragraph"},{"inlineContent":[{"type":"image","identifier":"simluator-first-run.png"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For more information on how to navigate using the simulator see, "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/Xcode\/interacting-with-your-app-in-the-visionos-simulator","isActive":true}],"type":"paragraph"},{"text":"Import the CloudXR Swift Package","anchor":"Import-the-CloudXR-Swift-Package","level":2,"type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Next we will be adding the CloudXRKit-SDK swift package. If your application is still running, "},{"type":"strong","inlineContent":[{"type":"text","text":"close out of it"}]},{"type":"text","text":". In the Project Navigator, "},{"type":"strong","inlineContent":[{"text":"right click","type":"text"}]},{"type":"text","text":" in an empty area and then "},{"type":"strong","inlineContent":[{"type":"text","text":"select"}]},{"type":"text","text":" "},{"type":"codeVoice","code":"Add Package Dependencies"},{"type":"text","text":"."}]}]}],"type":"orderedList"},{"inlineContent":[{"identifier":"add-package-dep.png","type":"image"}],"type":"paragraph"},{"start":2,"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A new window will show up. Enter the URL ","type":"text"},{"type":"codeVoice","code":"https:\/\/github.com\/NVIDIA\/cloudxr-framework"},{"text":" then ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"select"}]},{"text":" ","type":"text"},{"type":"codeVoice","code":"Add Package"},{"text":".","type":"text"}]}]}],"type":"orderedList"},{"inlineContent":[{"identifier":"add-package-github.png","type":"image"}],"type":"paragraph"},{"start":3,"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Another window will come up asking about the target for the package. In the drop down menu "},{"type":"strong","inlineContent":[{"text":"select","type":"text"}]},{"type":"text","text":" your Application, "},{"code":"My First AVP CloudXR Client","type":"codeVoice"},{"type":"text","text":"."}]}]}],"type":"orderedList"},{"inlineContent":[{"identifier":"add-package-targets.png","type":"image"}],"type":"paragraph"},{"start":4,"items":[{"content":[{"inlineContent":[{"text":"Then ","type":"text"},{"inlineContent":[{"text":"click","type":"text"}],"type":"strong"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Add Package"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"From the Project Navigator, go to your main application source file, ","type":"text"},{"code":"My_First_AVP_CloudXR_ClientApp.swift","type":"codeVoice"},{"text":" and add the following import after ","type":"text"},{"code":"import SwiftUI","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"code":["import CloudXRKit"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"What your file "},{"type":"codeVoice","code":"My_First_AVP_CloudXR_ClientApp.swift"},{"type":"text","text":" should look like at this point:"}],"type":"paragraph"},{"code":["import SwiftUI","","import CloudXRKit","","@main","struct My_First_AVP_CloudXR_ClientApp: App {","    var body: some Scene {","        WindowGroup {","            ContentView()","        }","    }","}"],"syntax":"swift","type":"codeListing"},{"start":6,"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Now ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Build and Run"}]},{"text":" on simulator! Assuming no build or runtime errors, you’ve now got CloudXR inside your Vision Pro app! You just haven’t done anything with it yet.","type":"text"}]}]}],"type":"orderedList"},{"text":"Enter your IP Address","anchor":"Enter-your-IP-Address","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Next we need to build the UI to enter your IP address."}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Open"}]},{"text":" ","type":"text"},{"type":"codeVoice","code":"ContentView.swift"},{"text":".  Start by ","type":"text"},{"type":"strong","inlineContent":[{"text":"adding","type":"text"}]},{"text":" the import at the top under ","type":"text"},{"type":"codeVoice","code":"import RealityKitContent"},{"text":":","type":"text"}]}]}],"type":"orderedList"},{"code":["import CloudXRKit"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Let’s add some variables to our "},{"type":"codeVoice","code":"View"},{"type":"text","text":" to keep track of CloudXR configation. We’ll make them "},{"type":"codeVoice","code":"@AppStorage()"},{"type":"text","text":" variables, which will persist them between runs, and we’ll also add a variable to store a useful configuration variable."}],"type":"paragraph"},{"start":2,"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Add"}]},{"type":"text","text":" the following line inside "},{"code":"ContentView","type":"codeVoice"},{"type":"text","text":" and before "},{"code":"body","type":"codeVoice"},{"type":"text","text":"."}]}]}],"type":"orderedList"},{"code":["\/\/ Configurable session settings.","@AppStorage(\"ipAddress\") static var ipAddress: String = \"\"","@AppStorage(\"resolutionPreset\") private var resolutionPreset: ResolutionPreset = .standardPreset"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Here is a reference on placement:","type":"text"}],"type":"paragraph"},{"code":["struct ContentView: View {","","    \/\/ The new section","","    \/\/ Configurable session settings.","    @AppStorage(\"ipAddress\") static var ipAddress: String = \"\"","    @AppStorage(\"resolutionPreset\") private var resolutionPreset: ResolutionPreset = .standardPreset","","    \/\/ end of the new section","","    var body: some View {","        ..."],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"💻 Check: 🛠️ Builds, ▶️ Runs, no error.","type":"text"}],"type":"paragraph"},{"start":3,"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Next, let’s add our IP address entry box within the "},{"type":"codeVoice","code":"ContentView"},{"type":"text","text":" body. "},{"type":"strong","inlineContent":[{"text":"Add","type":"text"}]},{"type":"text","text":" the following code within the "},{"type":"codeVoice","code":"VStack"},{"type":"text","text":" and before "},{"type":"codeVoice","code":"Model3D"},{"type":"text","text":"."}]}]}],"type":"orderedList"},{"code":["Form {","    HStack {","        Text(\"IP Address\")","        Spacer()","        TextField(\"0.0.0.0\", text: ContentView.$ipAddress)","            .autocorrectionDisabled(true)","            .keyboardType(.decimalPad)","            .textInputAutocapitalization(.never)","            .searchDictationBehavior(.inline(activation: .onLook))","            .onSubmit {","                \/\/ strip whitespace","                ContentView.ipAddress = ContentView.ipAddress.trimmingCharacters(","                    in: .whitespacesAndNewlines","                )","            }","    }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Here is a reference on placement:"}],"type":"paragraph"},{"code":["var body: some View {","    VStack {","","        \/\/ The new section","        Form {","            HStack {","            ...","            }","        }","        \/\/ end of the new section","","        Model3D(named: \"Scene\", bundle: realityKitContentBundle)","            .padding(.bottom, 50)","","        Text(\"Hello, world!\")","    }","    .padding()","}"],"syntax":"swift","type":"codeListing"},{"start":4,"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Build and run","type":"text"}]},{"type":"text","text":", now you should see your IP address box!"},{"type":"text","text":" "},{"type":"image","identifier":"image-1.png"}]}]}],"type":"orderedList"},{"inlineContent":[{"type":"text","text":"If you select the text box, you’ll get a numeric keypad."},{"type":"text","text":" "},{"type":"image","identifier":"image-2.png"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"What your file "},{"type":"codeVoice","code":"ContentView.swift"},{"type":"text","text":" should look like at this point:"}],"type":"paragraph"},{"code":["import SwiftUI","import RealityKit","import RealityKitContent","","import CloudXRKit","","struct ContentView: View {","    ","    \/\/ Configurable session settings.","    @AppStorage(\"ipAddress\") static var ipAddress: String = \"\"","    @AppStorage(\"resolutionPreset\") private var resolutionPreset: ResolutionPreset = .standardPreset","    ","    var body: some View {","        VStack {","            ","            Form {","                HStack {","                    Text(\"IP Address\")","                    Spacer()","                    TextField(\"0.0.0.0\", text: ContentView.$ipAddress)","                        .autocorrectionDisabled(true)","                        .keyboardType(.decimalPad)","                        .textInputAutocapitalization(.never)","                        .searchDictationBehavior(.inline(activation: .onLook))","                        .onSubmit {","                            \/\/ strip whitespace","                            ContentView.ipAddress = ContentView.ipAddress.trimmingCharacters(","                                in: .whitespacesAndNewlines","                            )","                        }","                }","            }","            ","            Model3D(named: \"Scene\", bundle: realityKitContentBundle)","                .padding(.bottom, 50)","","            Text(\"Hello, world!\")","        }","        .padding()","    }","}"],"syntax":"swift","type":"codeListing"},{"text":"Add a Connect button","anchor":"Add-a-Connect-button","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"From Xcode, click the "},{"code":"Stop","type":"codeVoice"},{"type":"text","text":" button ⏹ to terminate your application before continuing."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"What we want now is to have a "},{"type":"strong","inlineContent":[{"type":"text","text":"Connect"}]},{"type":"text","text":" button which takes this IP address and connects to a server."}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"So let’s start with the button itself, replacing ","type":"text"},{"type":"codeVoice","code":"Text(\"Hello, world!\")"},{"text":" add the following code:","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"code":["Button(\"Connect\") {","    Task { @MainActor in","    }","}.padding()"],"syntax":"swift","type":"codeListing"},{"start":2,"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"💻 ","type":"text"},{"inlineContent":[{"type":"text","text":"Check:"}],"type":"strong"},{"text":" 🛠️ Builds, ▶️ Runs, Connect button appears at the bottom of your app window.","type":"text"}]}]}],"type":"orderedList"},{"inlineContent":[{"identifier":"image-3.png","type":"image"}],"type":"paragraph"},{"inlineContent":[{"text":"What your file (ContentView.swift) should look like at this point: (🖱️clickme)","type":"text"}],"type":"paragraph"},{"code":["import SwiftUI","import RealityKit","import RealityKitContent","","import CloudXRKit","","struct ContentView: View {","","    \/\/ Configurable session settings.","    @AppStorage(\"ipAddress\") static var ipAddress: String = \"\"","    @AppStorage(\"resolutionPreset\") private var resolutionPreset: ResolutionPreset = .standardPreset","","    var body: some View {","        VStack {","            Form {","                HStack {","                    Text(\"IP Address\")","                    Spacer()","                    TextField(\"0.0.0.0\", text: ContentView.$ipAddress)","                        .autocorrectionDisabled(true)","                        .textInputAutocapitalization(.never)","                        .keyboardType(.decimalPad)","                        .searchDictationBehavior(.inline(activation: .onLook))","                        .onSubmit {","                            \/\/ strip whitespace","                            ContentView.ipAddress = ContentView.ipAddress.trimmingCharacters(","                                in: .whitespacesAndNewlines","                            )","                        }","                }","            }","            Model3D(named: \"Scene\", bundle: realityKitContentBundle)","                .padding(.bottom, 50)","","            \/\/ The new section","            ","            Button(\"Connect\") {","                Task { @MainActor in","                }","            }.padding()","            ","            \/\/ end of the new section","        }","        .padding()","    }","}",""],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Note that we gave the "},{"inlineContent":[{"type":"text","text":"Connect"}],"type":"strong"},{"text":" button a ","type":"text"},{"code":"Task","type":"codeVoice"},{"text":" which (currently) does nothing. Time to fix that. To make this connect button work, we need:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"To set the CloudXRKit "},{"code":"ResolutionPreset","type":"codeVoice"},{"type":"text","text":" to the correct value for the simluator."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"A single, global ","type":"text"},{"code":"CloudXRSession","type":"codeVoice"},{"text":" object.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"To configure the session with a local IP address configuration."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To call the session’s "},{"type":"codeVoice","code":".connect()"},{"type":"text","text":" method and wait on it"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To open an immersive space for the session to render into."}]}]}],"type":"unorderedList"},{"text":"Setup the CloudXR Session","anchor":"Setup-the-CloudXR-Session","level":2,"type":"heading"},{"inlineContent":[{"text":"You need your CloudXR Session object to be a global singleton for the app, accessible to any UI elements.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Open"}]},{"text":" your main app file, e.g., ","type":"text"},{"code":"My_First_AVP_CloudXR_ClientApp.swift","type":"codeVoice"},{"text":". We’re going to ","type":"text"},{"type":"strong","inlineContent":[{"text":"add","type":"text"}]},{"text":" the CloudXR Session object to your application, declaring it to be a ","type":"text"},{"code":"@State","type":"codeVoice"},{"text":" variable inside of ","type":"text"},{"code":"My_First_AVP_CloudXR_ClientApp","type":"codeVoice"},{"text":" but before ","type":"text"},{"code":"body","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"code":["@State private var cxrSession = CloudXRSession(","    config: CloudXRKit.Config()",")"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Here is a reference on placement:"}],"type":"paragraph"},{"code":["","@main","struct My_First_AVP_CloudXR_ClientApp: App {","    ","    \/\/ The new section","","    @State private var cxrSession = CloudXRSession(","        config: CloudXRKit.Config()","    )","","    \/\/ end of the new section","    ","    var body: some Scene {","        ...","    }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"💻 Check: 🛠️ Builds"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"But this variable is not yet visible to your "},{"type":"codeVoice","code":"ContentView"},{"type":"text","text":". You need to pass it via "},{"type":"codeVoice","code":".environment"},{"type":"text","text":"."}],"type":"paragraph"},{"start":2,"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Add"}]},{"type":"text","text":" the following code after the closing curly bracket "},{"type":"codeVoice","code":"}"},{"type":"text","text":" from "},{"type":"codeVoice","code":"WindowGroup"},{"type":"text","text":"."}],"type":"paragraph"}]}],"type":"orderedList"},{"code":[".environment(cxrSession)"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Here is a reference on placement:"}],"type":"paragraph"},{"code":["@main","struct My_First_AVP_CloudXR_ClientApp: App {","    ","    ...","    ","    var body: some Scene {","        WindowGroup {","            ContentView()","        }.environment(cxrSession) \/\/ The new section","    }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"💻 Check: 🛠️ Builds"}],"type":"paragraph"},{"code":["import SwiftUI","","import CloudXRKit","","@main","struct My_First_AVP_CloudXR_ClientApp: App {","    ","    @State private var cxrSession = CloudXRSession(","        config: CloudXRKit.Config()","    )","    ","    var body: some Scene {","        WindowGroup {","            ContentView()","        }.environment(cxrSession)","    }","}",""],"syntax":"swift","type":"codeListing"},{"text":"Register Systems","anchor":"Register-Systems","level":2,"type":"heading"},{"inlineContent":[{"text":"CloudXR uses the ECS tools (entity-component-system). You need to register CloudXRKit’s Systems in your app’s ","type":"text"},{"code":"init","type":"codeVoice"},{"text":" method","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Add"}],"type":"strong"},{"text":" the following code in ","type":"text"},{"type":"codeVoice","code":"My_First_AVP_CloudXR_ClientApp.swift"},{"text":". It will sit after ","type":"text"},{"type":"codeVoice","code":"cxrSession"},{"text":" but before ","type":"text"},{"type":"codeVoice","code":"body"},{"text":".","type":"text"}]}]}],"type":"orderedList"},{"code":["init() {","    CloudXRKit.registerSystems()","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Here is a reference on placement:"}],"type":"paragraph"},{"code":["struct My_First_AVP_CloudXR_ClientApp: App {","    ","    @State private var cxrSession = ...","","    \/\/ The new section","","    init() {","        CloudXRKit.registerSystems()","    }","","    \/\/ end of the new section","    ","    var body: some Scene {","        ...","    }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"💻 Check: 🛠️ Builds, Runs"}],"type":"paragraph"},{"code":["import SwiftUI","","import CloudXRKit","","@main","struct My_First_AVP_CloudXR_ClientApp: App {","    ","    @State private var cxrSession = CloudXRSession(","        config: CloudXRKit.Config()","    )","","    init() {","        CloudXRKit.registerSystems()","    }","    ","    var body: some Scene {","        WindowGroup {","            ContentView()","        }.environment(cxrSession)","    }","}",""],"syntax":"swift","type":"codeListing"},{"text":"Connecting to a server","anchor":"Connecting-to-a-server","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Back in "},{"type":"codeVoice","code":"ContentView.swift"},{"type":"text","text":", we need to make sure we can use that "},{"type":"codeVoice","code":"CloudXRSession"},{"type":"text","text":" object from the environment:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Before "},{"type":"codeVoice","code":"ipAddress"},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"add"}]},{"type":"text","text":" the following line of code."}]}]}],"type":"orderedList"},{"code":["@Environment(CloudXRSession.self) var cxrSession"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Here is a reference on placement:","type":"text"}],"type":"paragraph"},{"code":["","struct ContentView: View {","","    \/\/ The new section","","    @Environment(CloudXRSession.self) var cxrSession","    ","    \/\/ end of the new sections","    ","    \/\/ Configurable session settings.","    @AppStorage(\"ipAddress\") static var ipAddress: String = \"\"","    @AppStorage(\"resolutionPreset\") private var resolutionPreset: ResolutionPreset = .standardPreset","    ","    var body: some View {","        ...","    }","}"],"syntax":"swift","type":"codeListing"},{"start":2,"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Then let’s flesh out the "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" on the "},{"type":"codeVoice","code":"Button"},{"type":"text","text":". Add the following inside of "},{"type":"codeVoice","code":"Task"},{"type":"text","text":":"}]}]}],"type":"orderedList"},{"code":["var config = CloudXRKit.Config()","\/\/ Configure our IP address","config.connectionType = .local(ip: ContentView.ipAddress)","\/\/ Set the resolution preset","config.resolutionPreset = .lowResolutionPreset","cxrSession.configure(config: config)","\/\/ Connect!","try await cxrSession.connect()"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Here is a reference on placement:"}],"type":"paragraph"},{"code":["...","","struct ContentView: View {","    ","    ...","    ","    var body: some View {","        VStack {","            ","            ...","","            Button(\"Connect\") {","                Task { @MainActor in","                    ","                    \/\/ The new section","","                    var config = CloudXRKit.Config()","                    \/\/ Configure our IP address","                    config.connectionType = .local(ip: ContentView.ipAddress)","                    \/\/ Set the resolution preset","                    config.resolutionPreset = .standardPreset","                    cxrSession.configure(config: config)","                    \/\/ Connect!","                    try await cxrSession.connect()","","                    \/\/ end of the new section","                }","            }.padding()","        }","        .padding()","    }","}",""],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"What your file "},{"type":"codeVoice","code":"ContentView.swift"},{"type":"text","text":" should look like at this point:"}],"type":"paragraph"},{"code":["import SwiftUI","import RealityKit","import RealityKitContent","","import CloudXRKit","","struct ContentView: View {","    ","    @Environment(CloudXRSession.self) var cxrSession","    ","    \/\/ Configurable session settings.","    @AppStorage(\"ipAddress\") static var ipAddress: String = \"\"","    @AppStorage(\"resolutionPreset\") private var resolutionPreset: ResolutionPreset = .standardPreset","    ","    var body: some View {","        VStack {","            ","            Form {","                HStack {","                    Text(\"IP Address\")","                    Spacer()","                    TextField(\"0.0.0.0\", text: ContentView.$ipAddress)","                        .autocorrectionDisabled(true)","                        .keyboardType(.decimalPad)","                        .textInputAutocapitalization(.never)","                        .searchDictationBehavior(.inline(activation: .onLook))","                        .onSubmit {","                            \/\/ strip whitespace","                            ContentView.ipAddress = ContentView.ipAddress.trimmingCharacters(","                                in: .whitespacesAndNewlines","                            )","                        }","                }","            }","            ","            Model3D(named: \"Scene\", bundle: realityKitContentBundle)","                .padding(.bottom, 50)","","            Button(\"Connect\") {","                Task { @MainActor in","                    var config = CloudXRKit.Config()","                    \/\/ Configure our IP address","                    config.connectionType = .local(ip: ContentView.ipAddress)","                    \/\/ Set the resolution preset to low-resolution for testing; normally use .standardPreset","                    config.resolutionPreset = .lowResolutionPreset","                    cxrSession.configure(config: config)","                    \/\/ Connect!","                    try await cxrSession.connect()","                }","            }.padding()","        }","        .padding()","    }","}"],"syntax":"swift","type":"codeListing"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"💻 Check: 🛠️ Builds, Runs. Enter a random invalid IP address, and press "},{"type":"strong","inlineContent":[{"type":"text","text":"Connect"}]},{"type":"text","text":"."}],"type":"paragraph"}]}],"start":3,"type":"orderedList"},{"inlineContent":[{"text":"This won’t work yet, because we haven’t discussed having a valid CloudXR server! But you should see some activity in the Xcode console log, and eventually a log line containing:","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["setState: Connecting -> Disconnected"],"type":"codeListing"},{"inlineContent":[{"text":"This means that CloudXR’s streaming library was unable to connect, but that it at least tried!","type":"text"}],"type":"paragraph"},{"anchor":"Streaming-content-from-a-server","text":"Streaming content from a server","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"In order for CloudXR to stream, it needs the current space to be a RealityKit ImmersiveSpace that is properly “hooked up”."}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Create"}]},{"text":" a new empty file (File > New > Empty File) called ","type":"text"},{"type":"codeVoice","code":"ImmersiveView.swift"},{"text":".","type":"text"}]}]}],"type":"orderedList"},{"inlineContent":[{"identifier":"empty-file.png","type":"image"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Let’s start with imports and the basic structure of View. "},{"type":"strong","inlineContent":[{"type":"text","text":"Add"}]},{"type":"text","text":" the following code to the empty file."}],"type":"paragraph"}]}],"start":2,"type":"orderedList"},{"syntax":"swift","code":["import SwiftUI","import RealityKit","","import CloudXRKit","","let streamingSpaceTitle = \"CxrStreamingImmersiveSpace\"","","struct ImmersiveView: View {","    var body: some View {","        RealityView { content in","        }","    }","}"],"type":"codeListing"},{"inlineContent":[{"text":"This view will need to be able to see the CloudXR Session object, just like ","type":"text"},{"code":"ContentView","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the following code inside of "},{"code":"ImmersiveView","type":"codeVoice"},{"type":"text","text":" and before "},{"code":"body","type":"codeVoice"},{"type":"text","text":"."}]}]}],"start":3,"type":"orderedList"},{"syntax":"swift","code":["@Environment(CloudXRSession.self) var cxrSession"],"type":"codeListing"},{"inlineContent":[{"text":"Here is a reference on placement:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["...","","struct ImmersiveView: View {","    ","    \/\/ The new section","","    @Environment(CloudXRSession.self) var cxrSession","","    \/\/ end of the new Section","    ","    var body: some View {","        ...","    }","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"But CloudXR also needs know about the scene and this session, so so we need an "},{"code":"Entity","type":"codeVoice"},{"type":"text","text":" to glue it all together."},{"type":"text","text":" "},{"type":"text","text":"4. Add the following code after "},{"code":"cxrSession","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":"swift","code":["@State private var sessionEntity = Entity()    "],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Here is a reference on placement:"}],"type":"paragraph"},{"syntax":"swift","code":["...","","struct ImmersiveView: View {","    ","    @Environment(CloudXRSession.self) var cxrSession","","    \/\/ The new section","","    @State private var sessionEntity = Entity()","","    \/\/ end of the new section","    ","    var body: some View {","        ...","    }","}"],"type":"codeListing"},{"inlineContent":[{"text":"💻 Check: 🛠️ Builds, Runs","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Next, we need to create a "},{"type":"codeVoice","code":"CloudXRSessionComponent"},{"type":"text","text":" in the (at this point, active) scene that knows about the connected "},{"type":"codeVoice","code":"CloudXRSession"},{"type":"text","text":". Add the following code inside of "},{"type":"codeVoice","code":"RealityView"},{"type":"text","text":"."}],"type":"paragraph"}]}],"start":5,"type":"orderedList"},{"syntax":"swift","code":["sessionEntity.name = \"Session\"","","\/\/ Just a quick check; this View shouldn't be opened unless we're connected.","if cxrSession.state != .connected {","    print(\"Oops, we shouldn't be trying to render CloudXR without being connected!\")","}","","sessionEntity.components[CloudXRSessionComponent.self] = .init(session: cxrSession)","sessionEntity.transform = .init()","content.add(sessionEntity)"],"type":"codeListing"},{"inlineContent":[{"text":"💻 Check: 🛠️ Builds, Runs","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This new View is not (yet) being opened. To do that, we need to go back to the main app file (","type":"text"},{"code":"My_First_AVP_CloudXR_ClientApp.swift","type":"codeVoice"},{"text":" or similar) and add it to the end of our Scene.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Go to "},{"type":"codeVoice","code":"My_First_AVP_CloudXR_ClientApp.swift"},{"type":"text","text":" and add the following code inside of "},{"type":"codeVoice","code":"body"},{"type":"text","text":" and after "},{"type":"codeVoice","code":"WindowGroup"},{"type":"text","text":"."}]}]}],"start":6,"type":"orderedList"},{"syntax":"swift","code":["ImmersiveSpace(id: streamingSpaceTitle) {","    ImmersiveView()","}",".environment(cxrSession)"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Here is a reference on placement:"}],"type":"paragraph"},{"syntax":"swift","code":["...","","@main","struct My_First_AVP_CloudXR_ClientApp: App {","    ","    ...","    ","    var body: some Scene {","        ...","","        WindowGroup {","            ...","        }","        .environment(cxrSession)","","        \/\/ The new section","        ","        ImmersiveSpace(id: streamingSpaceTitle) {","            ImmersiveView()","        }","        .environment(cxrSession)","","        \/\/ end of the new section","    }","}",""],"type":"codeListing"},{"inlineContent":[{"text":"💻 Check: 🛠️ Builds, Runs","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Back in "},{"type":"codeVoice","code":"ContentView.swift"},{"type":"text","text":", we need to "},{"type":"emphasis","inlineContent":[{"type":"text","text":"open"}]},{"type":"text","text":" this ImmersiveSpace once CloudXR is connected."}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Go to ","type":"text"},{"code":"ContentView.swift","type":"codeVoice"},{"text":", and add the following code after ","type":"text"},{"code":"try await cxrSession.connect()","type":"codeVoice"},{"text":" and still inside ","type":"text"},{"code":"Task","type":"codeVoice"},{"text":".","type":"text"}]}]}],"start":7,"type":"orderedList"},{"syntax":null,"code":["await openImmersiveSpace(id: streamingSpaceTitle)"],"type":"codeListing"},{"inlineContent":[{"text":"Here is a reference on placement:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["...","","struct ContentView: View {","    ","    ...","    ","    var body: some View {","        VStack {","            ","            ...","","            Button(\"Connect\") {","                Task { @MainActor in","                    ...","","                    try await cxrSession.connect()","                    ","                    \/\/ The new section","","                    await openImmersiveSpace(id: streamingSpaceTitle)","","                    \/\/ end of the new section","                }","            }.padding()","        }","        .padding()","    }","}",""],"type":"codeListing"},{"inlineContent":[{"text":"This will require us to bring in ","type":"text"},{"type":"codeVoice","code":"openImmersiveSpace"},{"text":" from the environment.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Add the following code after ","type":"text"},{"code":"cxrSession","type":"codeVoice"},{"text":" but before ","type":"text"},{"code":"ipAddress","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"syntax":"swift","code":["@Environment(\\.openImmersiveSpace) var openImmersiveSpace"],"type":"codeListing"},{"inlineContent":[{"text":"Here is a reference on placement:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["...","","struct ContentView: View {","    ","    @Environment(CloudXRSession.self) var cxrSession","","    \/\/ The new section","","    @Environment(\\.openImmersiveSpace) var openImmersiveSpace","","    \/\/ end of the new section","    ","    \/\/ Configurable session settings.","    @AppStorage(\"ipAddress\") static var ipAddress: String = \"\"","    @AppStorage(\"resolutionPreset\") private var resolutionPreset: ResolutionPreset = .standardPreset","    ","    var body: some View {","        ...","    }","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Make sure your test server is running, then:"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"💻 Check: 🛠️ Builds, Runs, Connects, Streams!!"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"You should see streaming content that appears to be in the “room”."}],"type":"paragraph"},{"inlineContent":[{"identifier":"image-5.png","type":"image"}],"type":"paragraph"},{"anchor":"MyFirstAVPCloudXRClientAppswift-complete","text":"`My_First_AVP_CloudXR_ClientApp.swift` complete","level":2,"type":"heading"},{"syntax":"swift","code":["import SwiftUI","","import CloudXRKit","","@main","struct My_First_AVP_CloudXR_ClientApp: App {","    ","    @State private var cxrSession = CloudXRSession(","        config: CloudXRKit.Config()","    )","","    init() {","        CloudXRKit.registerSystems()","    }","    ","    var body: some Scene {","        WindowGroup {","            ContentView()","        }","        .environment(cxrSession)","        ","        ImmersiveSpace(id: streamingSpaceTitle) {","            ImmersiveView()","        }","        .environment(cxrSession)","    }","}",""],"type":"codeListing"},{"anchor":"ContentViewswift-complete","text":"`ContentView.swift` complete","level":2,"type":"heading"},{"syntax":"swift","code":["import SwiftUI","import RealityKit","import RealityKitContent","","import CloudXRKit","","struct ContentView: View {","    ","    @Environment(CloudXRSession.self) var cxrSession","    @Environment(\\.openImmersiveSpace) var openImmersiveSpace","    ","    \/\/ Configurable session settings.","    @AppStorage(\"ipAddress\") static var ipAddress: String = \"\"","    @AppStorage(\"resolutionPreset\") private var resolutionPreset: ResolutionPreset = .standardPreset","    ","    var body: some View {","        VStack {","            ","            Form {","                HStack {","                    Text(\"IP Address\")","                    Spacer()","                    TextField(\"0.0.0.0\", text: ContentView.$ipAddress)","                        .autocorrectionDisabled(true)","                        .keyboardType(.decimalPad)","                        .textInputAutocapitalization(.never)","                        .searchDictationBehavior(.inline(activation: .onLook))","                        .onSubmit {","                            \/\/ strip whitespace","                            ContentView.ipAddress = ContentView.ipAddress.trimmingCharacters(","                                in: .whitespacesAndNewlines","                            )","                        }","                }","            }","            ","            Model3D(named: \"Scene\", bundle: realityKitContentBundle)","                .padding(.bottom, 50)","","            Button(\"Connect\") {","                Task { @MainActor in","                    var config = CloudXRKit.Config()","                    \/\/ Configure our IP address","                    config.connectionType = .local(ip: ContentView.ipAddress)","                    \/\/ Set the resolution preset to low-resolution for testing; normally use .standardPreset","                    config.resolutionPreset = .lowResolutionPreset","                    cxrSession.configure(config: config)","                    \/\/ Connect!","                    try await cxrSession.connect()","                    ","                    await openImmersiveSpace(id: streamingSpaceTitle)","                }","            }.padding()","        }","        .padding()","    }","}","","#Preview(windowStyle: .automatic) {","    ContentView()","}",""],"type":"codeListing"},{"anchor":"ImmersiveViewswift-complete","text":"`ImmersiveView.swift` complete","level":2,"type":"heading"},{"syntax":"swift","code":["import SwiftUI","import RealityKit","","import CloudXRKit","","let streamingSpaceTitle = \"CxrStreamingImmersiveSpace\"","","struct ImmersiveView: View {","    ","    @Environment(CloudXRSession.self) var cxrSession","    @State private var sessionEntity = Entity()","    ","    var body: some View {","        RealityView { content in","            sessionEntity.name = \"Session\"","","            \/\/ Just a quick check; this View shouldn't be opened unless we're connected.","            if cxrSession.state != .connected {","                print(\"Oops, we shouldn't be trying to render CloudXR without being connected!\")","            }","","            sessionEntity.components[CloudXRSessionComponent.self] = .init(session: cxrSession)","            sessionEntity.transform = .init()","            content.add(sessionEntity)","        }","    }","}",""],"type":"codeListing"}]}],"kind":"article","references":{"xcode-new-project.png":{"variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/xcode-new-project.png","traits":["1x","light"]}],"identifier":"xcode-new-project.png","alt":"TODO: alt text","type":"image"},"image-3.png":{"type":"image","alt":"TODO: alt text","identifier":"image-3.png","variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/image-3.png","traits":["1x","light"]}]},"image-2.png":{"variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/image-2.png","traits":["1x","light"]}],"identifier":"image-2.png","alt":"IP addresss box with numeric keypad","type":"image"},"new-proj-xcode.png":{"type":"image","alt":"TODO: alt text","identifier":"new-proj-xcode.png","variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/new-proj-xcode@3x.png","traits":["3x","light"]}]},"doc://com.nvidia.CloudXRKit/documentation/CloudXRKit":{"type":"topic","title":"CloudXRKit","identifier":"doc:\/\/com.nvidia.CloudXRKit\/documentation\/CloudXRKit","url":"\/documentation\/cloudxrkit","abstract":[{"text":"Stream immersive applications.","type":"text"}],"kind":"symbol","role":"collection"},"created-proj.png":{"variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/created-proj.png","traits":["1x","light"]}],"identifier":"created-proj.png","alt":"TODO: alt text","type":"image"},"xcode-new-project-options.png":{"type":"image","alt":"TODO: alt text","identifier":"xcode-new-project-options.png","variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/xcode-new-project-options.png","traits":["1x","light"]}]},"new-proj.png":{"variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/new-proj@3x.png","traits":["3x","light"]}],"identifier":"new-proj.png","alt":"TODO: alt text","type":"image"},"simluator-first-run.png":{"type":"image","alt":"TODO: alt text","identifier":"simluator-first-run.png","variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/simluator-first-run.png","traits":["1x","light"]}]},"build-proj.png":{"variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/build-proj.png","traits":["1x","light"]}],"identifier":"build-proj.png","alt":"TODO: alt text","type":"image"},"add-package-github.png":{"type":"image","alt":"TODO: alt text","identifier":"add-package-github.png","variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/add-package-github.png","traits":["1x","light"]}]},"image-5.png":{"variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/image-5.png","traits":["1x","light"]}],"identifier":"image-5.png","alt":"TODO: alt text","type":"image"},"image-1.png":{"type":"image","alt":"New IP address box","identifier":"image-1.png","variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/image-1.png","traits":["1x","light"]}]},"add-package-targets.png":{"variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/add-package-targets.png","traits":["1x","light"]}],"identifier":"add-package-targets.png","alt":"TODO: alt text","type":"image"},"https://developer.apple.com/documentation/xcode/running-your-app-in-simulator-or-on-a-device":{"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/xcode\/running-your-app-in-simulator-or-on-a-device","title":"Running your app in Simulator or on a device","url":"https:\/\/developer.apple.com\/documentation\/xcode\/running-your-app-in-simulator-or-on-a-device","titleInlineContent":[{"type":"text","text":"Running your app in Simulator or on a device"}]},"add-package-dep.png":{"variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/add-package-dep.png","traits":["1x","light"]}],"identifier":"add-package-dep.png","alt":"TODO: alt text","type":"image"},"https://developer.apple.com/documentation/Xcode/interacting-with-your-app-in-the-visionos-simulator":{"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/Xcode\/interacting-with-your-app-in-the-visionos-simulator","title":"Interacting with your app in the visionOS simulator","url":"https:\/\/developer.apple.com\/documentation\/Xcode\/interacting-with-your-app-in-the-visionos-simulator","titleInlineContent":[{"type":"text","text":"Interacting with your app in the visionOS simulator"}]},"empty-file.png":{"variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/empty-file.png","traits":["1x","light"]}],"identifier":"empty-file.png","alt":"TODO: alt text","type":"image"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"add","path":"\/topicSections","value":null},{"op":"add","path":"\/seeAlsoSections","value":null}]}]}