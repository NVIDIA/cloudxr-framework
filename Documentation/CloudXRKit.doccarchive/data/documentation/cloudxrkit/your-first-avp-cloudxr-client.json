{"variants":[{"paths":["\/documentation\/cloudxrkit\/your-first-avp-cloudxr-client"],"traits":[{"interfaceLanguage":"swift"}]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/cloudxrkit\/your-first-avp-cloudxr-client"]}],"hierarchy":{"paths":[["doc:\/\/com.nvidia.CloudXRKit\/documentation\/CloudXRKit"]]},"kind":"article","schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"title":"Your First CloudXR Client for AVP","modules":[{"name":"CloudXRKit"}],"role":"article","roleHeading":"Article"},"identifier":{"url":"doc:\/\/com.nvidia.CloudXRKit\/documentation\/CloudXRKit\/Your-First-AVP-CloudXR-Client","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"content":[{"anchor":"Sys-Reqs","level":2,"type":"heading","text":"Sys Reqs"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As tested:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Xcode 16","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"visionOS Simulator 2.0","type":"text"}]}]}]},{"level":2,"text":"Make your project","anchor":"Make-your-project","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Open"}]},{"text":" Xcode and ","type":"text"},{"type":"strong","inlineContent":[{"text":"select","type":"text"}]},{"text":" ","type":"text"},{"type":"codeVoice","code":"New Project"},{"text":". Or if you have Xcode already open ","type":"text"},{"inlineContent":[{"type":"text","text":"go to"}],"type":"strong"},{"text":" ","type":"text"},{"type":"codeVoice","code":"File > New > Project"},{"text":".","type":"text"}]}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"new-proj-xcode.png"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"new-proj.png"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Now we will choose our template. From the top navigation, ","type":"text"},{"inlineContent":[{"type":"text","text":"select"}],"type":"strong"},{"type":"text","text":" "},{"code":"visionOS","type":"codeVoice"},{"text":" then ","type":"text"},{"type":"strong","inlineContent":[{"text":"select","type":"text"}]},{"type":"text","text":" "},{"code":"App","type":"codeVoice"},{"type":"text","text":". From there "},{"type":"strong","inlineContent":[{"text":"click","type":"text"}]},{"text":" on ","type":"text"},{"type":"codeVoice","code":"Next"},{"type":"text","text":"."}]}]}],"start":2},{"inlineContent":[{"type":"image","identifier":"xcode-new-project.png"}],"type":"paragraph"},{"type":"orderedList","start":3,"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Setup","type":"text"}]},{"type":"text","text":" and "},{"type":"strong","inlineContent":[{"text":"Configure","type":"text"}]},{"type":"text","text":" the following options:"}]},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Product Name:","type":"text"}]},{"text":" My First AVP CloudXR Client","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Team:","type":"text"}],"type":"strong"},{"text":" Select your appropriate team from the drop down","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Organization Identifier:","type":"text"}]},{"type":"text","text":" Provide an identifier corresponding to your organization \/ team"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Initial scene:","type":"text"}],"type":"strong"},{"type":"text","text":" Window"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For now, let’s assume you want your users to start in a “login window”."}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Immersive space renderer:"}],"type":"strong"},{"text":" None","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We’ll set this up later with CloudXR."}]}]}],"type":"unorderedList"}]}],"type":"unorderedList"}]}]},{"inlineContent":[{"identifier":"xcode-new-project-options.png","type":"image"}],"type":"paragraph"},{"type":"orderedList","start":4,"items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"Click","type":"text"}],"type":"strong"},{"type":"text","text":" on "},{"code":"Next","type":"codeVoice"},{"type":"text","text":". It will then prompt you where you want to save your project. Once you have selected a destination "},{"type":"strong","inlineContent":[{"type":"text","text":"click"}]},{"text":" ","type":"text"},{"type":"codeVoice","code":"Create"},{"text":". You should now see a window similar to the one below.","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"image","identifier":"created-proj.png"}],"type":"paragraph"},{"style":"note","type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"NOTE:"}],"type":"strong"},{"type":"text","text":" If the Preview Window is not working, do not worry about that it will not effect how the project runs in the simulator or on the device."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Make sure you know how to run apps on both the visionOS simulator and a Vision Pro device, as appropriate. If you are unsure see, "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/xcode\/running-your-app-in-simulator-or-on-a-device","isActive":true}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Always and ever: Go ahead and ","type":"text"},{"inlineContent":[{"text":"build","type":"text"}],"type":"strong"},{"text":" your project as it is, make sure everything works. To build, ","type":"text"},{"inlineContent":[{"type":"text","text":"click"}],"type":"strong"},{"type":"text","text":" on the Play Icon at the top left of the window."}]}]}],"type":"orderedList","start":5},{"type":"paragraph","inlineContent":[{"identifier":"build-proj.png","type":"image"}]},{"type":"paragraph","inlineContent":[{"text":"After building you should see the following on either the simulator or the device.","type":"text"}]},{"type":"paragraph","inlineContent":[{"identifier":"simluator-first-run.png","type":"image"}]},{"inlineContent":[{"text":"For more information on how to navigate using the simulator see, ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/documentation\/Xcode\/interacting-with-your-app-in-the-visionos-simulator","isActive":true,"type":"reference"}],"type":"paragraph"},{"level":2,"anchor":"Import-the-CloudXR-Swift-Package","type":"heading","text":"Import the CloudXR Swift Package"},{"items":[{"content":[{"inlineContent":[{"text":"Next we will be adding the CloudXRKit-SDK swift package. If your application is still running, ","type":"text"},{"inlineContent":[{"text":"close out of it","type":"text"}],"type":"strong"},{"type":"text","text":". In the Project Navigator, "},{"inlineContent":[{"type":"text","text":"right click"}],"type":"strong"},{"type":"text","text":" in an empty area and then "},{"type":"strong","inlineContent":[{"type":"text","text":"select"}]},{"text":" ","type":"text"},{"type":"codeVoice","code":"Add Package Dependencies"},{"text":".","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"add-package-dep.png"}]},{"start":2,"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A new window will show up. Toward the bottom ","type":"text"},{"type":"strong","inlineContent":[{"text":"select","type":"text"}]},{"text":" ","type":"text"},{"type":"codeVoice","code":"Add Local"},{"type":"text","text":"."}]}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"add-package-local.png"}]},{"type":"orderedList","start":3,"items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Navigate"}],"type":"strong"},{"text":" to where you downloaded the CloudXRKit-SDK. Make sure to select the folder that contains the ","type":"text"},{"type":"codeVoice","code":"Package.swift"},{"type":"text","text":" file. Then "},{"inlineContent":[{"text":"click","type":"text"}],"type":"strong"},{"text":" on ","type":"text"},{"code":"Add Package","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"identifier":"package-dir.png","type":"image"}],"type":"paragraph"},{"start":4,"type":"orderedList","items":[{"content":[{"inlineContent":[{"text":"Another window will come up asking about the target for the package. In the drop down menu ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"select"}]},{"text":" your Application, ","type":"text"},{"type":"codeVoice","code":"My First AVP CloudXR Client"},{"type":"text","text":"."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"identifier":"add-package-targets.png","type":"image"}]},{"type":"orderedList","start":5,"items":[{"content":[{"inlineContent":[{"text":"Then ","type":"text"},{"inlineContent":[{"type":"text","text":"click"}],"type":"strong"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Add Package"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"From the Project Navigator, go to your main application source file, "},{"type":"codeVoice","code":"My_First_AVP_CloudXR_ClientApp.swift"},{"text":" and add the following import after ","type":"text"},{"code":"import SwiftUI","type":"codeVoice"},{"type":"text","text":"."}]}]}]},{"code":["import CloudXRKit"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"What your file ","type":"text"},{"type":"codeVoice","code":"My_First_AVP_CloudXR_ClientApp.swift"},{"type":"text","text":" should look like at this point:"}]},{"type":"codeListing","syntax":"swift","code":["import SwiftUI","","import CloudXRKit","","@main","struct My_First_AVP_CloudXR_ClientApp: App {","    var body: some Scene {","        WindowGroup {","            ContentView()","        }","    }","}"]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Now "},{"inlineContent":[{"text":"Build and Run","type":"text"}],"type":"strong"},{"type":"text","text":" on simulator! Assuming no build or runtime errors, you’ve now got CloudXR inside your Vision Pro app! You just haven’t done anything with it yet."}],"type":"paragraph"}]}],"type":"orderedList","start":7},{"anchor":"Enter-your-IP-Address","type":"heading","text":"Enter your IP Address","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Next we need to build the UI to enter your IP address."}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Open"}]},{"text":" ","type":"text"},{"code":"ContentView.swift","type":"codeVoice"},{"type":"text","text":".  Start by "},{"inlineContent":[{"text":"adding","type":"text"}],"type":"strong"},{"type":"text","text":" the import at the top under "},{"type":"codeVoice","code":"import RealityKitContent"},{"type":"text","text":":"}]}]}],"type":"orderedList"},{"syntax":"swift","code":["import CloudXRKit"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Let’s add some variables to our ","type":"text"},{"type":"codeVoice","code":"View"},{"text":" to keep track of CloudXR configation. We’ll make them ","type":"text"},{"type":"codeVoice","code":"@AppStorage()"},{"text":" variables, which will persist them between runs, and we’ll also add a variable to store a useful configuration variable.","type":"text"}]},{"type":"orderedList","start":2,"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Add","type":"text"}],"type":"strong"},{"text":" the following line inside ","type":"text"},{"type":"codeVoice","code":"ContentView"},{"type":"text","text":" and before "},{"code":"body","type":"codeVoice"},{"text":".","type":"text"}]}]}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Configurable session settings.","@AppStorage(\"ipAddress\") static var ipAddress: String = \"\"","@AppStorage(\"resolutionPreset\") private var resolutionPreset: ResolutionPreset = .standardPreset"]},{"inlineContent":[{"type":"text","text":"Here is a reference on placement:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct ContentView: View {","","    \/\/ The new section","","    \/\/ Configurable session settings.","    @AppStorage(\"ipAddress\") static var ipAddress: String = \"\"","    @AppStorage(\"resolutionPreset\") private var resolutionPreset: ResolutionPreset = .standardPreset","","    \/\/ end of the new section","","    var body: some View {","        ..."]},{"inlineContent":[{"type":"text","text":"💻 Check: 🛠️ Builds, ▶️ Runs, no error."}],"type":"paragraph"},{"start":3,"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Next, let’s add our IP address entry box within the ","type":"text"},{"type":"codeVoice","code":"ContentView"},{"text":" body. ","type":"text"},{"inlineContent":[{"text":"Add","type":"text"}],"type":"strong"},{"text":" the following code within the ","type":"text"},{"type":"codeVoice","code":"VStack"},{"type":"text","text":" and before "},{"type":"codeVoice","code":"Model3D"},{"text":".","type":"text"}]}]}],"type":"orderedList"},{"syntax":"swift","type":"codeListing","code":["Form {","    HStack {","        Text(\"IP Address\")","        Spacer()","        TextField(\"0.0.0.0\", text: ContentView.$ipAddress)","            .autocorrectionDisabled(true)","            .keyboardType(.decimalPad)","            .textInputAutocapitalization(.never)","            .searchDictationBehavior(.inline(activation: .onLook))","            .onSubmit {","                \/\/ strip whitespace","                ContentView.ipAddress = ContentView.ipAddress.trimmingCharacters(","                    in: .whitespacesAndNewlines","                )","            }","    }","}"]},{"inlineContent":[{"type":"text","text":"Here is a reference on placement:"}],"type":"paragraph"},{"code":["var body: some View {","    VStack {","","        \/\/ The new section","        Form {","            HStack {","            ...","            }","        }","        \/\/ end of the new section","","        Model3D(named: \"Scene\", bundle: realityKitContentBundle)","            .padding(.bottom, 50)","","        Text(\"Hello, world!\")","    }","    .padding()","}"],"syntax":"swift","type":"codeListing"},{"start":4,"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Build and run","type":"text"}]},{"type":"text","text":", now you should see your IP address box!"},{"text":" ","type":"text"},{"type":"image","identifier":"image-1.png"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"If you select the text box, you’ll get a numeric keypad.","type":"text"},{"type":"text","text":" "},{"identifier":"image-2.png","type":"image"}]},{"inlineContent":[{"type":"text","text":"What your file "},{"type":"codeVoice","code":"ContentView.swift"},{"text":" should look like at this point:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["import SwiftUI","import RealityKit","import RealityKitContent","","import CloudXRKit","","struct ContentView: View {","    ","    \/\/ Configurable session settings.","    @AppStorage(\"ipAddress\") static var ipAddress: String = \"\"","    @AppStorage(\"resolutionPreset\") private var resolutionPreset: ResolutionPreset = .standardPreset","    ","    var body: some View {","        VStack {","            ","            Form {","                HStack {","                    Text(\"IP Address\")","                    Spacer()","                    TextField(\"0.0.0.0\", text: ContentView.$ipAddress)","                        .autocorrectionDisabled(true)","                        .keyboardType(.decimalPad)","                        .textInputAutocapitalization(.never)","                        .searchDictationBehavior(.inline(activation: .onLook))","                        .onSubmit {","                            \/\/ strip whitespace","                            ContentView.ipAddress = ContentView.ipAddress.trimmingCharacters(","                                in: .whitespacesAndNewlines","                            )","                        }","                }","            }","            ","            Model3D(named: \"Scene\", bundle: realityKitContentBundle)","                .padding(.bottom, 50)","","            Text(\"Hello, world!\")","        }","        .padding()","    }","}"],"type":"codeListing"},{"type":"heading","text":"From here to Connect","level":2,"anchor":"From-here-to-Connect"},{"type":"paragraph","inlineContent":[{"type":"text","text":"From Xcode, click the "},{"code":"Stop","type":"codeVoice"},{"type":"text","text":" button ⏹ to terminate your application before continuing."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"What we want now is to have a "},{"inlineContent":[{"type":"text","text":"Connect"}],"type":"strong"},{"type":"text","text":" button which takes this IP address and connects to a server."}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"text":"So let’s start with the button itself, replacing ","type":"text"},{"code":"Text(\"Hello, world!\")","type":"codeVoice"},{"type":"text","text":" add the following code:"}],"type":"paragraph"}]}]},{"type":"codeListing","code":["Button(\"Connect\") {","    Task { @MainActor in","    }","}.padding()"],"syntax":"swift"},{"type":"orderedList","start":2,"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"💻 ","type":"text"},{"type":"strong","inlineContent":[{"text":"Check:","type":"text"}]},{"type":"text","text":" 🛠️ Builds, ▶️ Runs, Connect button appears at the bottom of your app window."}]}]}]},{"inlineContent":[{"identifier":"image-3.png","type":"image"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"What your file (ContentView.swift) should look like at this point: (🖱️clickme)"}]},{"type":"codeListing","syntax":"swift","code":["import SwiftUI","import RealityKit","import RealityKitContent","","import CloudXRKit","","struct ContentView: View {","","    \/\/ Configurable session settings.","    @AppStorage(\"ipAddress\") static var ipAddress: String = \"\"","    @AppStorage(\"resolutionPreset\") private var resolutionPreset: ResolutionPreset = .standardPreset","","    var body: some View {","        VStack {","            Form {","                HStack {","                    Text(\"IP Address\")","                    Spacer()","                    TextField(\"0.0.0.0\", text: ContentView.$ipAddress)","                        .autocorrectionDisabled(true)","                        .textInputAutocapitalization(.never)","                        .keyboardType(.decimalPad)","                        .searchDictationBehavior(.inline(activation: .onLook))","                        .onSubmit {","                            \/\/ strip whitespace","                            ContentView.ipAddress = ContentView.ipAddress.trimmingCharacters(","                                in: .whitespacesAndNewlines","                            )","                        }","                }","            }","            Model3D(named: \"Scene\", bundle: realityKitContentBundle)","                .padding(.bottom, 50)","","            \/\/ The new section","            ","            Button(\"Connect\") {","                Task { @MainActor in","                }","            }.padding()","            ","            \/\/ end of the new section","        }","        .padding()","    }","}",""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that we gave the "},{"inlineContent":[{"text":"Connect","type":"text"}],"type":"strong"},{"type":"text","text":" button a "},{"code":"Task","type":"codeVoice"},{"type":"text","text":" which (currently) does nothing. Time to fix that. To make this connect button work, we need:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"To set the CloudXRKit "},{"type":"codeVoice","code":"ResolutionPreset"},{"text":" to the correct value for the simluator.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A single, global "},{"code":"CloudXRSession","type":"codeVoice"},{"text":" object.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To configure the session with a local IP address configuration."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"To call the session’s ","type":"text"},{"type":"codeVoice","code":".connect()"},{"type":"text","text":" method and wait on it"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"To open an immersive space for the session to render into.","type":"text"}]}]}]},{"level":2,"type":"heading","text":"Setting up CloudXR","anchor":"Setting-up-CloudXR"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You need these things for setting up CloudXR:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A CloudXR Session object","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To register CloudXR Systems"}]}]},{"content":[{"inlineContent":[{"text":"To get the IPD for the user from the headset","type":"text"}],"type":"paragraph"}]}]},{"level":3,"text":"CloudXR Session","type":"heading","anchor":"CloudXR-Session"},{"inlineContent":[{"text":"You need your CloudXR Session object to be a global singleton for the app, accessible to any UI elements.","type":"text"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Open","type":"text"}]},{"text":" your main app file, e.g., ","type":"text"},{"type":"codeVoice","code":"My_First_AVP_CloudXR_ClientApp.swift"},{"text":". We’re going to ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"add"}]},{"type":"text","text":" the CloudXR Session object to your application, declaring it to be a "},{"code":"@State","type":"codeVoice"},{"type":"text","text":" variable inside of "},{"type":"codeVoice","code":"My_First_AVP_CloudXR_ClientApp"},{"type":"text","text":" but before "},{"code":"body","type":"codeVoice"},{"text":":","type":"text"}]}]}]},{"syntax":"swift","code":["@State private var cxrSession = CloudXRSession(","    config: CloudXRKit.Config()",")"],"type":"codeListing"},{"inlineContent":[{"text":"Here is a reference on placement:","type":"text"}],"type":"paragraph"},{"code":["","@main","struct My_First_AVP_CloudXR_ClientApp: App {","    ","    \/\/ The new section","","    @State private var cxrSession = CloudXRSession(","        config: CloudXRKit.Config()","    )","","    \/\/ end of the new section","    ","    var body: some Scene {","        ...","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"💻 Check: 🛠️ Builds"}]},{"inlineContent":[{"text":"But this variable is not yet visible to your ","type":"text"},{"type":"codeVoice","code":"ContentView"},{"text":". You need to pass it via ","type":"text"},{"type":"codeVoice","code":".environment"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Add","type":"text"}]},{"text":" the following code after the closing curly bracket ","type":"text"},{"code":"}","type":"codeVoice"},{"text":" from ","type":"text"},{"type":"codeVoice","code":"WindowGroup"},{"type":"text","text":"."}]}]}],"start":2},{"type":"codeListing","syntax":"swift","code":[".environment(cxrSession)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is a reference on placement:"}]},{"type":"codeListing","code":["@main","struct My_First_AVP_CloudXR_ClientApp: App {","    ","    ...","    ","    var body: some Scene {","        WindowGroup {","            ContentView()","        }.environment(cxrSession) \/\/ The new section","    }","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"💻 Check: 🛠️ Builds"}],"type":"paragraph"},{"type":"codeListing","code":["import SwiftUI","","import CloudXRKit","","@main","struct My_First_AVP_CloudXR_ClientApp: App {","    ","    @State private var cxrSession = CloudXRSession(","        config: CloudXRKit.Config()","    )","    ","    var body: some Scene {","        WindowGroup {","            ContentView()","        }.environment(cxrSession)","    }","}",""],"syntax":"swift"},{"text":"Register Systems","level":3,"anchor":"Register-Systems","type":"heading"},{"inlineContent":[{"type":"text","text":"CloudXR uses the ECS tools (entity-component-system). You need to register CloudXRKit’s Systems in your app’s "},{"type":"codeVoice","code":"init"},{"type":"text","text":" method"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Add","type":"text"}]},{"text":" the following code in ","type":"text"},{"code":"My_First_AVP_CloudXR_ClientApp.swift","type":"codeVoice"},{"type":"text","text":". It will sit after "},{"code":"cxrSession","type":"codeVoice"},{"text":" but before ","type":"text"},{"code":"body","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"syntax":"swift","code":["init() {","    CloudXRKit.registerSystems()","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is a reference on placement:"}]},{"code":["struct My_First_AVP_CloudXR_ClientApp: App {","    ","    @State private var cxrSession = ...","","    \/\/ The new section","","    init() {","        CloudXRKit.registerSystems()","    }","","    \/\/ end of the new section","    ","    var body: some Scene {","        ...","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"💻 Check: 🛠️ Builds, Runs"}]},{"syntax":"swift","code":["import SwiftUI","","import CloudXRKit","","@main","struct My_First_AVP_CloudXR_ClientApp: App {","    ","    @State private var cxrSession = CloudXRSession(","        config: CloudXRKit.Config()","    )","","    init() {","        CloudXRKit.registerSystems()","    }","    ","    var body: some Scene {","        WindowGroup {","            ContentView()","        }.environment(cxrSession)","    }","}",""],"type":"codeListing"},{"text":"Get IPD for the current user","type":"heading","anchor":"Get-IPD-for-the-current-user","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"At present, some critical information for remote rendering can only be queried in a "},{"type":"codeVoice","code":"CompositorServices"},{"type":"text","text":" "},{"code":"ImmersiveSpace","type":"codeVoice"},{"type":"text","text":". CloudXRKit provides some utilities for doing this, but you have to initiate this from your main app file."}]},{"inlineContent":[{"text":"To hold this information, add a ","type":"text"},{"type":"codeVoice","code":"State"},{"type":"text","text":" of type "},{"type":"codeVoice","code":"HmdProperties"},{"type":"text","text":" (defined in CloudXRKit) to your main App. We will also add our Immersive Space environement as well."}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"Add","type":"text"}],"type":"strong"},{"type":"text","text":" the following code in "},{"type":"codeVoice","code":"My_First_AVP_CloudXR_ClientApp"},{"type":"text","text":" but before "},{"code":"cxrSession","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"code":["@Environment(\\.openImmersiveSpace) var openImmersiveSpace","@State private var hmdProperties = HmdProperties()"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Here is a reference on placement:"}],"type":"paragraph"},{"code":["struct My_First_AVP_CloudXR_ClientApp: App {","","    \/\/ The new section","","    @Environment(\\.openImmersiveSpace) var openImmersiveSpace","    @State private var hmdProperties = HmdProperties()","","    \/\/ end of the new section","","    @State private var cxrSession = ...","    ..."],"type":"codeListing","syntax":"swift"},{"start":2,"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Next "},{"type":"strong","inlineContent":[{"text":"add","type":"text"}]},{"type":"text","text":" this import below "},{"code":"import CloudXRKit","type":"codeVoice"},{"text":":","type":"text"}]}]}]},{"code":["import CompositorServices"],"syntax":"swfit","type":"codeListing"},{"type":"orderedList","start":3,"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Then ","type":"text"},{"type":"strong","inlineContent":[{"text":"add","type":"text"}]},{"type":"text","text":" the following code inside of "},{"code":"body","type":"codeVoice"},{"type":"text","text":" and before "},{"code":"WindowGroup","type":"codeVoice"},{"type":"text","text":":"}]}]}]},{"type":"codeListing","code":["FetchHmdPropertiesImmersiveSpace(hmdProperties: hmdProperties)"],"syntax":"swift"},{"inlineContent":[{"text":"Here is a reference on placement:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["@main","struct My_First_AVP_CloudXR_ClientApp: App {","    ","    ...","    ","    var body: some Scene {","        ","        \/\/ The new section","","        FetchHmdPropertiesImmersiveSpace(hmdProperties: hmdProperties)","","        \/\/ end of the new section","        ","        WindowGroup {","            ContentView()","        }.environment(cxrSession)","    }","}",""],"type":"codeListing"},{"start":4,"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Add"}]},{"text":" the following code into the paranthesis of ","type":"text"},{"type":"codeVoice","code":"ContentView"}]}]}]},{"syntax":"swift","code":["hmdProperties: hmdProperties"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is a reference on placement:"}]},{"syntax":"swift","code":["@main","struct My_First_AVP_CloudXR_ClientApp: App {","    ","    ...","    ","    var body: some Scene {","        ","        ...","        ","        WindowGroup {","            ContentView(hmdProperties: hmdProperties) \/\/ The new section","        }.environment(cxrSession)","    }","}",""],"type":"codeListing"},{"inlineContent":[{"text":"Also, add to your ","type":"text"},{"type":"codeVoice","code":"ContentView()"},{"text":" an ","type":"text"},{"code":".onAppear","type":"codeVoice"},{"text":" that starts the check.","type":"text"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Add"}]},{"type":"text","text":" the following code after "},{"code":"ContentView()","type":"codeVoice"},{"type":"text","text":"."}]}]}],"start":5},{"type":"codeListing","syntax":"swift","code":[".onAppear {","    hmdProperties.beginIpdCheck(openImmersiveSpace: openImmersiveSpace)","}"]},{"inlineContent":[{"text":"Here is a reference on placement:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["import SwiftUI","","import CloudXRKit","","@main","struct My_First_AVP_CloudXR_ClientApp: App {","    ","    ...","    ","    var body: some Scene {","        ","        ...","        ","        WindowGroup {","            ContentView(hmdProperties: hmdProperties)","","                \/\/ The new section","","                .onAppear {","                    hmdProperties.beginIpdCheck(openImmersiveSpace: openImmersiveSpace)","                }","","                \/\/ end of the new section","                ","        }.environment(cxrSession)","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"What your file ","type":"text"},{"type":"codeVoice","code":"My_First_AVP_CloudXR_ClientApp.swift"},{"text":" should look like at this point:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["import SwiftUI","","import CloudXRKit","","@main","struct My_First_AVP_CloudXR_ClientApp: App {","","    @Environment(\\.openImmersiveSpace) var openImmersiveSpace","","    @State private var hmdProperties = HmdProperties()","    @State private var cxrSession = CloudXRSession(","        config: CloudXRKit.Config()","    )","","    init() {","        CloudXRKit.registerSystems()","    }","    ","    var body: some Scene {","        FetchHmdPropertiesImmersiveSpace(hmdProperties: hmdProperties)","","        WindowGroup {","            ContentView(hmdProperties: hmdProperties)","                .onAppear {","                    hmdProperties.beginIpdCheck(openImmersiveSpace: openImmersiveSpace)","                }","        }","        .environment(cxrSession)","    }","}"]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Before Building the project, head over to ","type":"text"},{"type":"codeVoice","code":"ContentView.swift"},{"type":"text","text":" and "},{"type":"strong","inlineContent":[{"type":"text","text":"add"}]},{"type":"text","text":" the following code inside of "},{"code":"ContentView","type":"codeVoice"},{"type":"text","text":"."}]}]}],"type":"orderedList","start":6},{"syntax":"swift","type":"codeListing","code":["\/\/ HMD properties for re-measuring the IPD when needed.","let hmdProperties: HmdProperties"]},{"inlineContent":[{"text":"Here is a reference on placement:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["","struct ContentView: View {","    ","    \/\/ The new section","","    \/\/ HMD properties for re-measuring the IPD when needed.","    let hmdProperties: HmdProperties","    ","    \/\/ end of the new sections","    ","    \/\/ Configurable session settings.","    @AppStorage(\"ipAddress\") static var ipAddress: String = \"\"","    @AppStorage(\"resolutionPreset\") private var resolutionPreset: ResolutionPreset = .standardPreset","    ","    var body: some View {","        ...","    }","}",""],"type":"codeListing"},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"NOTE:","type":"text"}],"type":"strong"},{"text":" If you want to see the Preview replace ","type":"text"},{"code":"ContentView()","type":"codeVoice"},{"type":"text","text":" with "},{"type":"codeVoice","code":"ContentView(hmdProperties: HmdProperties())"}]}],"style":"note","name":"Note","type":"aside"},{"type":"heading","level":2,"anchor":"Connect-not-quite-connectedthough","text":"Connect! (not quite connected,though)"},{"type":"paragraph","inlineContent":[{"text":"Back in ","type":"text"},{"type":"codeVoice","code":"ContentView.swift"},{"type":"text","text":", we need to make sure we can use that "},{"code":"CloudXRSession","type":"codeVoice"},{"type":"text","text":" object from the environment:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"After ","type":"text"},{"type":"codeVoice","code":"hmdProperties"},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"add"}]},{"text":" the following line of code.","type":"text"}]}]}]},{"code":["@Environment(CloudXRSession.self) var cxrSession"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is a reference on placement:"}]},{"syntax":"swift","type":"codeListing","code":["","struct ContentView: View {","    \/\/ HMD properties for re-measuring the IPD when needed.","    let hmdProperties: HmdProperties","","    \/\/ The new section","","    @Environment(CloudXRSession.self) var cxrSession","    ","    \/\/ end of the new sections","    ","    \/\/ Configurable session settings.","    @AppStorage(\"ipAddress\") static var ipAddress: String = \"\"","    @AppStorage(\"resolutionPreset\") private var resolutionPreset: ResolutionPreset = .standardPreset","    ","    var body: some View {","        ...","    }","}"]},{"start":2,"type":"orderedList","items":[{"content":[{"inlineContent":[{"text":"Then let’s flesh out the ","type":"text"},{"code":"Task","type":"codeVoice"},{"text":" on the ","type":"text"},{"type":"codeVoice","code":"Button"},{"type":"text","text":". Add the following inside of "},{"code":"Task","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["var config = CloudXRKit.Config()","\/\/ Configure our IP address","config.connectionType = .local(ip: ContentView.ipAddress)","\/\/ Set the resolution preset to low-resolution for testing; normally use .standardPreset","config.resolutionPreset = .lowResolutionPreset","cxrSession.configure(config: config)","\/\/ Connect!","try await cxrSession.connect()"]},{"inlineContent":[{"type":"text","text":"Here is a reference on placement:"}],"type":"paragraph"},{"code":["...","","struct ContentView: View {","    ","    ...","    ","    var body: some View {","        VStack {","            ","            ...","","            Button(\"Connect\") {","                Task { @MainActor in","                    ","                    \/\/ The new section","","                    var config = CloudXRKit.Config()","                    \/\/ Configure our IP address","                    config.connectionType = .local(ip: ContentView.ipAddress)","                    \/\/ Set the resolution preset to low-resolution for testing; normally use .standardPreset","                    config.resolutionPreset = .lowResolutionPreset","                    cxrSession.configure(config: config)","                    \/\/ Connect!","                    try await cxrSession.connect()","","                    \/\/ end of the new section","                }","            }.padding()","        }","        .padding()","    }","}",""],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"What your file ","type":"text"},{"type":"codeVoice","code":"ContentView.swift"},{"type":"text","text":" should look like at this point:"}]},{"code":["import SwiftUI","import RealityKit","import RealityKitContent","","import CloudXRKit","","struct ContentView: View {","    ","    \/\/ HMD properties for re-measuring the IPD when needed.","    let hmdProperties: HmdProperties","    ","    @Environment(CloudXRSession.self) var cxrSession","    ","    \/\/ Configurable session settings.","    @AppStorage(\"ipAddress\") static var ipAddress: String = \"\"","    @AppStorage(\"resolutionPreset\") private var resolutionPreset: ResolutionPreset = .standardPreset","    ","    var body: some View {","        VStack {","            ","            Form {","                HStack {","                    Text(\"IP Address\")","                    Spacer()","                    TextField(\"0.0.0.0\", text: ContentView.$ipAddress)","                        .autocorrectionDisabled(true)","                        .keyboardType(.decimalPad)","                        .textInputAutocapitalization(.never)","                        .searchDictationBehavior(.inline(activation: .onLook))","                        .onSubmit {","                            \/\/ strip whitespace","                            ContentView.ipAddress = ContentView.ipAddress.trimmingCharacters(","                                in: .whitespacesAndNewlines","                            )","                        }","                }","            }","            ","            Model3D(named: \"Scene\", bundle: realityKitContentBundle)","                .padding(.bottom, 50)","","            Button(\"Connect\") {","                Task { @MainActor in","                    var config = CloudXRKit.Config()","                    \/\/ Configure our IP address","                    config.connectionType = .local(ip: ContentView.ipAddress)","                    \/\/ Set the resolution preset to low-resolution for testing; normally use .standardPreset","                    config.resolutionPreset = .lowResolutionPreset","                    cxrSession.configure(config: config)","                    \/\/ Connect!","                    try await cxrSession.connect()","                }","            }.padding()","        }","        .padding()","    }","}"],"type":"codeListing","syntax":"swift"},{"start":3,"items":[{"content":[{"inlineContent":[{"type":"text","text":"💻 Check: 🛠️ Builds, Runs. Enter a random invalid IP address, and press "},{"type":"strong","inlineContent":[{"type":"text","text":"Connect"}]},{"type":"text","text":"."}],"type":"paragraph"}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This won’t work yet, because we haven’t discussed having a valid CloudXR server! But you should see some activity in the Xcode console log, and eventually a log line containing:"}]},{"code":["NVSC LIBRARY method 'nvstConnectToServer' has not returned in 10 seconds."],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"This means that CloudXR’s streaming library was unable to connect, but that it at least tried!","type":"text"}]},{"anchor":"Connect-Connected-not-quite-streaming-though","text":"Connect! Connected! (not quite streaming, though)","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"You need a CloudXR server.","type":"text"}]},{"inlineContent":[{"type":"text","text":"TODO:"},{"type":"text","text":" "},{"type":"text","text":"I largely consider this part ouf of scope. From now on, I’ll assume you have a CloudXRServerSample.exe server running at a known IP address."}],"type":"paragraph"},{"anchor":"Connect-Connected-Streaming","text":"Connect! Connected! Streaming!!","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"In order for CloudXR to stream, it needs the current space to be a RealityKit ImmersiveSpace that is properly “hooked up”."}]},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Create"}],"type":"strong"},{"type":"text","text":" a new empty file (File > New > Empty File) called "},{"type":"codeVoice","code":"ImmersiveView.swift"},{"text":".","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"inlineContent":[{"type":"image","identifier":"empty-file.png"}],"type":"paragraph"},{"type":"orderedList","start":2,"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Let’s start with imports and the basic structure of View. ","type":"text"},{"inlineContent":[{"text":"Add","type":"text"}],"type":"strong"},{"text":" the following code to the empty file.","type":"text"}]}]}]},{"syntax":"swift","code":["import SwiftUI","import RealityKit","","import CloudXRKit","","let streamingSpaceTitle = \"CxrStreamingImmersiveSpace\"","","struct StreamingView: View {","    var body: some View {","        RealityView { content in","        }","    }","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"This view will need to be able to see the CloudXR Session object, just like ","type":"text"},{"type":"codeVoice","code":"ContentView"},{"type":"text","text":"."}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Add the following code inside of ","type":"text"},{"code":"StreamingView","type":"codeVoice"},{"type":"text","text":" and before "},{"type":"codeVoice","code":"body"},{"text":".","type":"text"}]}]}],"start":3,"type":"orderedList"},{"type":"codeListing","code":["@Environment(CloudXRSession.self) var cxrSession"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Here is a reference on placement:"}],"type":"paragraph"},{"type":"codeListing","code":["...","","struct StreamingView: View {","    ","    \/\/ The new section","","    @Environment(CloudXRSession.self) var cxrSession","","    \/\/ end of the new Section","    ","    var body: some View {","        ...","    }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"But CloudXR also needs know about the scene and this session, so so we need an "},{"type":"codeVoice","code":"Entity"},{"text":" to glue it all together.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"4. Add the following code after "},{"code":"cxrSession","type":"codeVoice"},{"text":".","type":"text"}]},{"code":["@State private var sessionEntity = Entity()    "],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is a reference on placement:"}]},{"code":["...","","struct StreamingView: View {","    ","    @Environment(CloudXRSession.self) var cxrSession","","    \/\/ The new section","","    @State private var sessionEntity = Entity()","","    \/\/ end of the new section","    ","    var body: some View {","        ...","    }","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"💻 Check: 🛠️ Builds, Runs"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Next, we need to create a "},{"code":"CloudXRSessionComponent","type":"codeVoice"},{"type":"text","text":" in the (at this point, active) scene that knows about the connected "},{"type":"codeVoice","code":"CloudXRSession"},{"type":"text","text":". Add the following code inside of "},{"code":"RealityView","type":"codeVoice"},{"text":".","type":"text"}]}]}],"start":5},{"type":"codeListing","syntax":"swift","code":["sessionEntity.name = \"Session\"","","\/\/ Just a quick check; this View shouldn't be opened unless we're connected.","if cxrSession.state != .connected {","    print(\"Oops, we shouldn't be trying to render CloudXR without being connected!\")","}","","sessionEntity.components[CloudXRSessionComponent.self] = .init(session: cxrSession)","sessionEntity.transform = .init()","content.add(sessionEntity)"]},{"inlineContent":[{"text":"💻 Check: 🛠️ Builds, Runs","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"This new View is not (yet) being opened. To do that, we need to go back to the main app file (","type":"text"},{"type":"codeVoice","code":"My_First_AVP_CloudXR_ClientApp.swift"},{"text":" or similar) and add it to the end of our Scene.","type":"text"}]},{"start":6,"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Go to "},{"type":"codeVoice","code":"My_First_AVP_CloudXR_ClientApp.swift"},{"text":" and add the following code inside of ","type":"text"},{"code":"body","type":"codeVoice"},{"type":"text","text":" and after "},{"type":"codeVoice","code":"WindowGroup"},{"type":"text","text":"."}]}]}]},{"syntax":"swift","code":["ImmersiveSpace(id: streamingSpaceTitle) {","    StreamingView()","}",".environment(cxrSession)"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Here is a reference on placement:"}],"type":"paragraph"},{"code":["...","","@main","struct My_First_AVP_CloudXR_ClientApp: App {","    ","    ...","    ","    var body: some Scene {","        ...","","        WindowGroup {","            ...","        }","        .environment(cxrSession)","","        \/\/ The new section","        ","        ImmersiveSpace(id: streamingSpaceTitle) {","            StreamingView()","        }","        .environment(cxrSession)","","        \/\/ end of the new section","    }","}",""],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"💻 Check: 🛠️ Builds, Runs"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Back in "},{"type":"codeVoice","code":"ContentView.swift"},{"type":"text","text":", we need to "},{"inlineContent":[{"text":"open","type":"text"}],"type":"emphasis"},{"type":"text","text":" this ImmersiveSpace once CloudXR is connected."}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Go to "},{"code":"ContentView.swift","type":"codeVoice"},{"type":"text","text":", and add the following code after "},{"code":"try await cxrSession.connect()","type":"codeVoice"},{"type":"text","text":" and still inside "},{"code":"Task","type":"codeVoice"},{"type":"text","text":"."}]}]}],"start":7,"type":"orderedList"},{"syntax":null,"code":["await openImmersiveSpace(id: streamingSpaceTitle)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is a reference on placement:"}]},{"type":"codeListing","syntax":"swift","code":["...","","struct ContentView: View {","    ","    ...","    ","    var body: some View {","        VStack {","            ","            ...","","            Button(\"Connect\") {","                Task { @MainActor in","                    ...","","                    try await cxrSession.connect()","                    ","                    \/\/ The new section","","                    await openImmersiveSpace(id: streamingSpaceTitle)","","                    \/\/ end of the new section","                }","            }.padding()","        }","        .padding()","    }","}",""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will require us to bring in "},{"type":"codeVoice","code":"openImmersiveSpace"},{"type":"text","text":" from the environment."}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the following code after "},{"type":"codeVoice","code":"cxrSession"},{"type":"text","text":" but before "},{"code":"ipAddress","type":"codeVoice"},{"text":".","type":"text"}]}]}],"type":"orderedList"},{"type":"codeListing","syntax":"swift","code":["@Environment(\\.openImmersiveSpace) var openImmersiveSpace"]},{"inlineContent":[{"text":"Here is a reference on placement:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["...","","struct ContentView: View {","    ","    \/\/ HMD properties for re-measuring the IPD when needed.","    let hmdProperties: HmdProperties","    ","    @Environment(CloudXRSession.self) var cxrSession","","    \/\/ The new section","","    @Environment(\\.openImmersiveSpace) var openImmersiveSpace","","    \/\/ end of the new section","    ","    \/\/ Configurable session settings.","    @AppStorage(\"ipAddress\") static var ipAddress: String = \"\"","    @AppStorage(\"resolutionPreset\") private var resolutionPreset: ResolutionPreset = .standardPreset","    ","    var body: some View {","        ...","    }","}"],"syntax":"swift"},{"inlineContent":[{"text":"Make sure your test server is running, then:","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"💻 Check: 🛠️ Builds, Runs, Connects, Streams!!","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"You should get a pirate ship that seems to be in the “room”.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"image-5.png"}]},{"text":"`My_First_AVP_CloudXR_ClientApp.swift` complete","level":2,"type":"heading","anchor":"MyFirstAVPCloudXRClientAppswift-complete"},{"code":["import SwiftUI","","import CloudXRKit","","@main","struct My_First_AVP_CloudXR_ClientApp: App {","    ","    @Environment(\\.openImmersiveSpace) var openImmersiveSpace","    ","    @State private var hmdProperties = HmdProperties()","    @State private var cxrSession = CloudXRSession(","        config: CloudXRKit.Config()","    )","","    init() {","        CloudXRKit.registerSystems()","    }","    ","    var body: some Scene {","        FetchHmdPropertiesImmersiveSpace(hmdProperties: hmdProperties)","","        WindowGroup {","            ContentView(hmdProperties: hmdProperties)","                .onAppear {","                    hmdProperties.beginIpdCheck(openImmersiveSpace: openImmersiveSpace)","                }","        }","        .environment(cxrSession)","        ","        ImmersiveSpace(id: streamingSpaceTitle) {","            StreamingView()","        }","        .environment(cxrSession)","    }","}",""],"syntax":"swift","type":"codeListing"},{"anchor":"ContentViewswift-complete","type":"heading","text":"`ContentView.swift` complete","level":2},{"type":"codeListing","syntax":"swift","code":["import SwiftUI","import RealityKit","import RealityKitContent","","import CloudXRKit","","struct ContentView: View {","    ","    \/\/ HMD properties for re-measuring the IPD when needed.","    let hmdProperties: HmdProperties","    ","    @Environment(CloudXRSession.self) var cxrSession","    @Environment(\\.openImmersiveSpace) var openImmersiveSpace","    ","    \/\/ Configurable session settings.","    @AppStorage(\"ipAddress\") static var ipAddress: String = \"\"","    @AppStorage(\"resolutionPreset\") private var resolutionPreset: ResolutionPreset = .standardPreset","    ","    var body: some View {","        VStack {","            ","            Form {","                HStack {","                    Text(\"IP Address\")","                    Spacer()","                    TextField(\"0.0.0.0\", text: ContentView.$ipAddress)","                        .autocorrectionDisabled(true)","                        .keyboardType(.decimalPad)","                        .textInputAutocapitalization(.never)","                        .searchDictationBehavior(.inline(activation: .onLook))","                        .onSubmit {","                            \/\/ strip whitespace","                            ContentView.ipAddress = ContentView.ipAddress.trimmingCharacters(","                                in: .whitespacesAndNewlines","                            )","                        }","                }","            }","            ","            Model3D(named: \"Scene\", bundle: realityKitContentBundle)","                .padding(.bottom, 50)","","            Button(\"Connect\") {","                Task { @MainActor in","                    var config = CloudXRKit.Config()","                    \/\/ Configure our IP address","                    config.connectionType = .local(ip: ContentView.ipAddress)","                    \/\/ Set the resolution preset to low-resolution for testing; normally use .standardPreset","                    config.resolutionPreset = .lowResolutionPreset","                    cxrSession.configure(config: config)","                    \/\/ Connect!","                    try await cxrSession.connect()","                    ","                    await openImmersiveSpace(id: streamingSpaceTitle)","                }","            }.padding()","        }","        .padding()","    }","}","","#Preview(windowStyle: .automatic) {","    ContentView(hmdProperties: HmdProperties())","}",""]},{"text":"`ImmersiveView.swift` complete","type":"heading","anchor":"ImmersiveViewswift-complete","level":2},{"type":"codeListing","syntax":"swift","code":["import SwiftUI","import RealityKit","","import CloudXRKit","","let streamingSpaceTitle = \"CxrStreamingImmersiveSpace\"","","struct StreamingView: View {","    ","    @Environment(CloudXRSession.self) var cxrSession","    @State private var sessionEntity = Entity()","    ","    var body: some View {","        RealityView { content in","            sessionEntity.name = \"Session\"","","            \/\/ Just a quick check; this View shouldn't be opened unless we're connected.","            if cxrSession.state != .connected {","                print(\"Oops, we shouldn't be trying to render CloudXR without being connected!\")","            }","","            sessionEntity.components[CloudXRSessionComponent.self] = .init(session: cxrSession)","            sessionEntity.transform = .init()","            content.add(sessionEntity)","        }","    }","}",""]},{"type":"heading","text":"Debug stuff that doesn’t fit here","level":2,"anchor":"Debug-stuff-that-doesnt-fit-here"},{"text":"❌Error: Compiling for visionOS 1.1, but module ‘RealityKitContent’ has a minimum deployment target of visionOS 2.0: …","anchor":"%E2%9D%8CError-Compiling-for-visionOS-11-but-module-RealityKitContent-has-a-minimum-deployment-target-of-visionOS-20-","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"This error occurs because Xcode’s generated application has a package RealityKitContent which requires visionOS 2.0, but CloudXRKit was compiled with a RealityKitContent package with visionOS  1.1."}]},{"inlineContent":[{"text":"This error, if it happens, should be triggered on the first build done after you ","type":"text"},{"type":"codeVoice","code":"import CloudXRKit"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"error-failed-import-visionos1_1.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The worarkound is to edit the "},{"code":"Package.swift","type":"codeVoice"},{"text":" file inside your Xcode application’s RealityKitContent package. Set the version to the string “1.1”:","type":"text"}]},{"code":["        .visionOS(.v2),"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"becomes"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["        .visionOS(\"1.1\"),"]},{"type":"paragraph","inlineContent":[{"text":"Then do a ","type":"text"},{"type":"codeVoice","code":"menubar > Product > Clean Build Folder..."},{"type":"text","text":" (⌘-Shift-K), then Build."}]},{"inlineContent":[{"identifier":"error-failed-import-fix.png","type":"image"}],"type":"paragraph"},{"type":"heading","level":3,"anchor":"Whats-with-all-these-modifiers","text":"What’s with all these modifiers?"},{"inlineContent":[{"type":"text","text":"You might now want or need all of them, but these are a good default set for an IP address field."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":".autocorrectionDisabled(true)"},{"type":"text","text":" because IP addresses aren’t words to be spell checked"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":".keyboardType(.decimalPad)"},{"type":"text","text":" because IP addresse are easier to enter on a number pad"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".textInputAutocapitalization(.never)"},{"text":" because if you ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"don’t","type":"text"}]},{"type":"text","text":" require a numeric entry (e.g., if your server has a alphanumeric host name) you don’t want to accidentally capitalize things"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":".searchDictationBehavior(.inline(activation: .onLook))","type":"codeVoice"},{"type":"text","text":" because you might want to speak the IP address in the headset rather than using an awkward spatial keyboard."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".onSubmit {}"},{"text":" allows you to do validation\/cleanup of the entry, such as the whitespace trimming done here.","type":"text"}]}]}]}],"kind":"content"}],"references":{"add-package-dep.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.nvidia.CloudXRKit\/add-package-dep.png"}],"identifier":"add-package-dep.png","type":"image","alt":"TODO: alt text"},"build-proj.png":{"identifier":"build-proj.png","alt":"TODO: alt text","type":"image","variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/build-proj.png","traits":["1x","light"]}]},"new-proj-xcode.png":{"alt":"TODO: alt text","type":"image","identifier":"new-proj-xcode.png","variants":[{"traits":["3x","light"],"url":"\/images\/com.nvidia.CloudXRKit\/new-proj-xcode@3x.png"}]},"xcode-new-project.png":{"identifier":"xcode-new-project.png","variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/xcode-new-project.png","traits":["1x","light"]}],"type":"image","alt":"TODO: alt text"},"empty-file.png":{"identifier":"empty-file.png","variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/empty-file.png","traits":["1x","light"]}],"type":"image","alt":"TODO: alt text"},"package-dir.png":{"identifier":"package-dir.png","variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/package-dir.png","traits":["1x","light"]}],"type":"image","alt":"TODO: alt text"},"image-2.png":{"identifier":"image-2.png","variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/image-2.png","traits":["1x","light"]}],"type":"image","alt":"IP addresss box with numeric keypad"},"simluator-first-run.png":{"identifier":"simluator-first-run.png","variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/simluator-first-run.png","traits":["1x","light"]}],"type":"image","alt":"TODO: alt text"},"image-1.png":{"identifier":"image-1.png","variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/image-1.png","traits":["1x","light"]}],"type":"image","alt":"New IP address box"},"doc://com.nvidia.CloudXRKit/documentation/CloudXRKit":{"role":"collection","url":"\/documentation\/cloudxrkit","title":"CloudXRKit","type":"topic","abstract":[{"type":"text","text":"Stream immersive applications."}],"kind":"symbol","identifier":"doc:\/\/com.nvidia.CloudXRKit\/documentation\/CloudXRKit"},"add-package-targets.png":{"identifier":"add-package-targets.png","variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/add-package-targets.png","traits":["1x","light"]}],"type":"image","alt":"TODO: alt text"},"image-3.png":{"identifier":"image-3.png","variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/image-3.png","traits":["1x","light"]}],"type":"image","alt":"TODO: alt text"},"image-5.png":{"identifier":"image-5.png","variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/image-5.png","traits":["1x","light"]}],"type":"image","alt":"TODO: alt text"},"error-failed-import-fix.png":{"identifier":"error-failed-import-fix.png","variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/error-failed-import-fix.png","traits":["1x","light"]}],"type":"image","alt":"TODO: alt text"},"created-proj.png":{"identifier":"created-proj.png","variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/created-proj.png","traits":["1x","light"]}],"type":"image","alt":"TODO: alt text"},"xcode-new-project-options.png":{"identifier":"xcode-new-project-options.png","variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/xcode-new-project-options.png","traits":["1x","light"]}],"type":"image","alt":"TODO: alt text"},"https://developer.apple.com/documentation/xcode/running-your-app-in-simulator-or-on-a-device":{"identifier":"https:\/\/developer.apple.com\/documentation\/xcode\/running-your-app-in-simulator-or-on-a-device","url":"https:\/\/developer.apple.com\/documentation\/xcode\/running-your-app-in-simulator-or-on-a-device","type":"link","titleInlineContent":[{"text":"Running your app in Simulator or on a device","type":"text"}],"title":"Running your app in Simulator or on a device"},"add-package-local.png":{"identifier":"add-package-local.png","variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/add-package-local.png","traits":["1x","light"]}],"type":"image","alt":"TODO: alt text"},"https://developer.apple.com/documentation/Xcode/interacting-with-your-app-in-the-visionos-simulator":{"identifier":"https:\/\/developer.apple.com\/documentation\/Xcode\/interacting-with-your-app-in-the-visionos-simulator","url":"https:\/\/developer.apple.com\/documentation\/Xcode\/interacting-with-your-app-in-the-visionos-simulator","type":"link","titleInlineContent":[{"text":"Interacting with your app in the visionOS simulator","type":"text"}],"title":"Interacting with your app in the visionOS simulator"},"new-proj.png":{"identifier":"new-proj.png","variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/new-proj@3x.png","traits":["3x","light"]}],"type":"image","alt":"TODO: alt text"},"error-failed-import-visionos1_1.png":{"identifier":"error-failed-import-visionos1_1.png","variants":[{"url":"\/images\/com.nvidia.CloudXRKit\/error-failed-import-visionos1_1.png","traits":["1x","light"]}],"type":"image","alt":"TODO: alt text"}},"variantOverrides":[{"patch":[{"path":"\/identifier\/interfaceLanguage","op":"replace","value":"occ"},{"value":null,"op":"add","path":"\/topicSections"},{"op":"add","path":"\/seeAlsoSections","value":null}],"traits":[{"interfaceLanguage":"occ"}]}]}